# Множества содержат в себе уникальные элементы, не обязательно упорядоченные.
# Одно множество может содержать значения любых типов. Если у Вас есть два множества,
# Вы можете совершать над ними любые стандартные операции, например, объединение,
# пересечение и разность. Давайте разберем их.

#!!!!!! Словари определяет фигурные {'','','',} -скобки c перечеслениями в нутри   !!!!!


colors = {'red', 'green', 'blue'}
print(colors) # {'red', 'green', 'blue'}

colors.add('red') # Если хотим добавить значение которое уже есть во множестве то оно не добавиться.
print(colors) # {'red', 'green', 'blue'}
colors.add('gray') 
print(colors) # {'red', 'green', 'blue','gray'}


colors.remove('red') # если хотим удалить тзначение
print(colors) # {'green', 'blue','gray'}
#colors.remove('red') # KeyError: 'red' # если удалять то чего нет во множетеле то будет ошибка
colors.discard('red') # есть функция discard- которая проверяет наличее значения если значение есть удаляет если нет пропускает
print(colors)

colors.clear() # функция удоляет все из множества
print(colors)

print('_Операции со множествами в Python______________________________________')

# Множества
# Операции со множествами в Python:


a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21}
print(a)
print(b)
c = a.copy() # c = {1, 2, 3, 5, 8} посто копирует множество а
print(c)
u = a.union(b) # u = {1, 2, 3, 5, 8, 13, обЪеденение множеств a и b (т.к. двоек две то покажет только одну
#потому что множества это  уникальное множество)
print(u) 
i = a.intersection(b) # i = {8, 2, 5} пересечение элементов можно их вывести
print(i) 
dl = a.difference(b) # dl = {1, 3} разность a - b
print(dl)
dr = b.difference(a) # dr = {13, 21} разность b - a
print(dr)
q = a.union(b).difference(a.intersection(b))# {1, 21, 3, 13} первое делаем a.intersection(b) -> a.union(b) -> difference
print(q)


# Неизменяемое или замороженное множество(frozenset) — множество, с которым не будут 
# работать методы удаления и добавления

print('_Неизменяемое или замороженное множество_____________________________________')


a = {1, 2, 3, 5, 8}
b = frozenset(a)  # хотим заморозить множество a
print(b) # frozenset({1, 2, 3, 5, 8})
